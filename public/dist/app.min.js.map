{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/whatwg-fetch/fetch.js","public/js/app.js","public/js/components/confirm.js","public/js/components/modal.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","self","fetch","support","searchParams","iterable","Symbol","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","obj","DataView","prototype","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","oldValue","get","has","hasOwnProperty","set","callback","thisArg","keys","push","values","entries","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","fromCharCode","join","bufferClone","slice","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","type","rejected","then","text","decode","json","JSON","parse","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","referrer","clone","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","_confirm","kitems","kitemsContainer","document","querySelector","getKitemContent","item","content","image","exact","desc","funded","price","booked","bought","addItem","kitem","createElement","classList","add","dataset","id","innerHTML","appendChild","reloadItem","addKitems","bookItem","itemId","_confirm2","default","catch","err","console","buyItem","participate","window","kitemActions","addEventListener","target","matches","preventDefault","closest","listDetails","list","textContent","title","getListName","paths","pathname","filter","p","loadList","_modal","confirmFactory","arguments","message","_modal2","label","close","action","modalFactory","buttons","modalContainer","removePreviousModals","previousModals","querySelectorAll","modal","_this","addModal","modalElt","actions","button","buttonElt","addOverlay","overlays","overlay","overlayElt","remove"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","import 'whatwg-fetch';\nimport confirmComponent from './components/confirm.js';\n\nconst kitems = {};\n\nconst kitemsContainer = document.querySelector('.kitems');\n\nconst getKitemContent = item => {\n    let content  = `\n                <div class=\"headmage\">\n                        <a href=\"${item.url}\" target=\"_blank\">\n                            <img src=\"${item.image}\" alt=\"${item.name}\">\n                        </a>\n                    </div>\n                    <h2>${item.name}</h2>\n                    <div class=\"warn\">\n                        <span class=\"icon icon-${item.exact ? 'alert' : 'gift'}\"></span> ${item.exact ? 'Modèle exacte' : 'Modèle libre / Idée cadeau'}\n                    </div>\n                    <p class=\"desc\">${item.desc}</p>\n                    <div class=\"price\">\n                        <progress value=\"${item.funded}\" max=\"${item.price}\" title=\"Reste ${item.price - item.funded} €\"></progress>\n                        <span class=\"amount\">${item.price}</span>\n                    </div>`;\n        if(item.booked){\n            content += '<strong>Article réservé</strong>';\n        } else if (item.bought){\n            content += '<strong>Article acheté</strong>';\n        } else {\n            content += `\n                    <ul class=\"actions\">\n                        <li><a href=\"${item.url}\" target=\"_blank\" ><span class=\"icon icon-globe\"></span> Site web</a></li>\n                        <li><a href=\"#\" class=\"book\"><span class=\"icon icon-lock\"></span> Réserver</a></li>\n                        <li><a href=\"#\" class=\"buy\"><span class=\"icon icon-credit-card\"></span> Acheter</a></li>\n                        <li><a href=\"#\" class=\"participate\"://www.leetchi.com/c/naissance-de-b-chevrier-boquet\" class=\"participate\"><span class=\"icon icon-squirrel\"></span> Participer</a></li>\n                    </ul>`;\n        }\n        return content;\n    };\n\n    const addItem = item => {\n    const kitem = document.createElement('article');\n    kitem.classList.add('kitem');\n    kitem.dataset.id = item.id;\n    kitem.innerHTML = getKitemContent(item);\n    kitemsContainer.appendChild(kitem);\n};\nconst reloadItem = item => {\n    const kitem = document.querySelector(`.kitem[data-id='${item.id}']`);\n    kitem.innerHTML = getKitemContent(item);\n};\n\nconst addKitems = () => Object.values(kitems).forEach(addItem);\n\nconst bookItem = itemId => {\n    confirmComponent('Veuiller confirmer la réservation', 'Une fois confirmé, l\\'article ne sera plus accessible', () => {\n        fetch(`/kitem/book?item=${itemId}`, { method : 'post' })\n            .then( response => {\n                if(response.status === 200){\n                    kitems[itemId].booked = true;\n                    reloadItem(kitems[itemId]);\n                }\n            })\n            .catch( err => console.error(err));\n    }).open();\n};\n\nconst buyItem = itemId => {\n    confirmComponent('Veuiller confirmer l\\'achat', 'Une fois confirmé, l\\'article ne sera plus accessible', () => {\n        fetch(`/kitem/buy?item=${itemId}`, { method : 'post' })\n            .then( response => {\n                if(response.status === 200){\n                    kitems[itemId].bought = true;\n                    reloadItem(kitems[itemId]);\n                }\n            })\n        .catch( err => console.error(err));\n    }).open();\n};\n\nconst participate = itemId => {\n    confirmComponent('Vous souhaitez participer ?', 'Vous serez redirigé sur notre cagnotte Leetchi.', () => {\n        window.open('https://www.leetchi.com/c/naissance-de-b-chevrier-boquet', '_blank');\n    }).open();\n};\n\nconst kitemActions = () => {\n\n    kitemsContainer.addEventListener('click', e => {\n        if(e.target){\n            if(e.target.matches('.book')) {\n                e.preventDefault();\n                bookItem(e.target.closest('.kitem').dataset.id);\n            }\n            if(e.target.matches('.buy')) {\n                e.preventDefault();\n                buyItem(e.target.closest('.kitem').dataset.id);\n            }\n            if(e.target.matches('.participate')) {\n                e.preventDefault();\n                participate(e.target.closest('.kitem').dataset.id);\n            }\n        }\n    });\n};\n\nconst listDetails = list => {\n    document.querySelector('body > header > h1').textContent = list.title;\n    document.querySelector('main .details').textContent = list.desc;\n};\n\nconst getListName = () => {\n    const  paths =\n        document.location.pathname\n            .split('/')\n            .filter( p => p && p.trim().length );\n    if(paths && paths.length > 0){\n        return paths[0];\n    }\n    return false;\n};\n\nconst loadList = () => {\n    const name = getListName();\n    if(name){\n        fetch(`/klist/${name}`)\n            .then( result => result.json())\n            .then( list => {\n                if(list && list.id){\n                    listDetails(list);\n                    kitemActions(list.id);\n                    return fetch(`/kitems?list=${list.id}`).then( result => result.json());\n                }\n            })\n            .then( items => {\n                if(items.length){\n                    items.forEach( item => kitems[item.id] = item);\n                    addKitems();\n                }\n            })\n            .catch( err => console.error(err));\n    }\n};\n\nloadList();\n","import modal from './modal.js';\n\nconst confirmFactory = function (title = 'Please confirm', message = '', done){\n\n    return modal(title, message, [{\n        label : 'Annuler',\n        close : true,\n    }, {\n        label : 'Confirmer',\n        close : true,\n        action : done\n    }]);\n};\n\nexport default confirmFactory;\n","\n\nconst modalFactory = function (title = '', content = '', buttons = [{ label : 'Ok', close : true, action : () => {} }]){\n\n    const modalContainer = document.querySelector('body');\n\n    const removePreviousModals = () => {\n        const previousModals = modalContainer.querySelectorAll('.modal');\n        if(previousModals.length){\n            //[].forEach.call(previousModals, modal => modalContainer.removeChild(modal));\n        }\n    };\n\n    const modal = {\n        init() {\n            const addModal = () => {\n\n                const modalElt = document.createElement('div');\n                modalElt.classList.add('modal');\n                modalElt.innerHTML = `\n                    <h1>${title}</h1>\n                    <div>\n                        ${content}\n                    </div>\n                    <div class=\"actions\"></div>\n                `;\n\n                const actions = modalElt.querySelector('.actions');\n                buttons.forEach( button => {\n                    const buttonElt = document.createElement('button');\n                    buttonElt.textContent = button.label;\n                    if(button.close || button.action){\n                        buttonElt.addEventListener('click', e => {\n                            e.preventDefault();\n                            if(button.close){\n                                this.close();\n                            }\n                            if(typeof button.action === 'function'){\n                                button.action.call();\n                            }\n                        });\n                    }\n                    actions.appendChild(buttonElt);\n                });\n\n                modalContainer.appendChild(modalElt);\n\n                return modalElt;\n            };\n\n            const addOverlay     = () => {\n                const overlays = modalContainer.querySelectorAll('.overlay');\n\n                if(overlays.length === 0){\n                    const overlay = document.createElement('div');\n                    overlay.classList.add('overlay');\n                    modalContainer.appendChild(overlay);\n                    return overlay;\n                }\n\n                return overlays[0];\n            };\n\n            removePreviousModals();\n\n            this.overlayElt = addOverlay();\n            this.modalElt = addModal();\n\n            return this;\n        },\n\n        open(){\n\n\n            this.overlayElt.classList.add('active');\n            this.modalElt.classList.add('active');\n\n            return this;\n        },\n\n        close(){\n            this.overlayElt.classList.remove('active');\n            this.modalElt.classList.remove('active');\n\n            return this;\n        }\n    };\n    return modal.init();\n\n};\n\nexport default modalFactory;\n"]}